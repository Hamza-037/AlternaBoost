/**
 * Script de seed pour AlternaBoost
 * G√©n√®re des donn√©es de test pour le d√©veloppement
 * 
 * Ex√©cution: npm run db:seed
 */

import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± D√©but du seed de la base de donn√©es...');

  // ============================================
  // 1. CR√âER DES UTILISATEURS DE TEST
  // ============================================
  console.log('üë§ Cr√©ation des utilisateurs de test...');

  const userFree = await prisma.user.upsert({
    where: { email: 'free@test.com' },
    update: {},
    create: {
      clerkUserId: 'user_test_free_123',
      email: 'free@test.com',
      firstName: 'Marie',
      lastName: 'Dupont',
      plan: 'FREE',
      subscriptionStatus: 'active',
      cvsCreatedThisMonth: 2,
      lettersCreatedThisMonth: 1,
      usageResetDate: new Date(new Date().setMonth(new Date().getMonth() + 1)),
    },
  });

  const userPro = await prisma.user.upsert({
    where: { email: 'pro@test.com' },
    update: {},
    create: {
      clerkUserId: 'user_test_pro_456',
      email: 'pro@test.com',
      firstName: 'Thomas',
      lastName: 'Martin',
      plan: 'PRO',
      subscriptionStatus: 'active',
      stripeCustomerId: 'cus_test_pro_123',
      stripeSubscriptionId: 'sub_test_pro_123',
      currentPeriodEnd: new Date(new Date().setMonth(new Date().getMonth() + 1)),
      cvsCreatedThisMonth: 15,
      lettersCreatedThisMonth: 8,
      usageResetDate: new Date(new Date().setMonth(new Date().getMonth() + 1)),
    },
  });

  console.log(`‚úÖ Utilisateurs cr√©√©s: ${userFree.email}, ${userPro.email}`);

  // ============================================
  // 2. CR√âER DES CVS EXEMPLES
  // ============================================
  console.log('üìÑ Cr√©ation de CVs de test...');

  const cvModern = await prisma.cV.create({
    data: {
      userId: userFree.id,
      template: 'modern',
      title: 'CV D√©veloppeur Web',
      status: 'completed',
      targetCompany: 'Google France',
      targetPosition: 'D√©veloppeur Frontend',
      downloadCount: 5,
      data: {
        nom: 'Dupont',
        prenom: 'Marie',
        email: 'marie.dupont@email.com',
        telephone: '+33 6 12 34 56 78',
        formation: 'Master Informatique',
        ecole: 'Universit√© Paris-Saclay',
        anneeFormation: '2024',
        experiences: [
          {
            poste: 'D√©veloppeuse Frontend',
            entreprise: 'StartupXYZ',
            periode: 'Jan 2023 - Pr√©sent',
            description: 'D√©veloppement d\'applications React avec TypeScript. Mise en place d\'une architecture scalable ayant r√©duit les temps de chargement de 40%.',
          },
          {
            poste: 'Stagiaire D√©veloppeuse',
            entreprise: 'TechCorp',
            periode: 'Mai 2022 - Ao√ªt 2022',
            description: 'Contribution au d√©veloppement du site e-commerce en Next.js. Impl√©mentation de fonctionnalit√©s d\'internationalisation.',
          },
        ],
        competences: 'React, TypeScript, Next.js, TailwindCSS, Node.js, PostgreSQL',
        objectif: 'D√©veloppeuse frontend passionn√©e par la cr√©ation d\'exp√©riences web modernes',
        entrepriseCiblee: 'Google France',
        objectifAmeliore: 'D√©veloppeuse frontend passionn√©e par la cr√©ation d\'exp√©riences web modernes et performantes. Sp√©cialis√©e en React et TypeScript, je cherche √† rejoindre une √©quipe innovante pour cr√©er des produits qui font la diff√©rence.',
        experiencesAmeliorees: [
          {
            poste: 'D√©veloppeuse Frontend',
            entreprise: 'StartupXYZ',
            periode: 'Jan 2023 - Pr√©sent',
            description: 'D√©veloppement d\'applications React avec TypeScript. Mise en place d\'une architecture scalable ayant r√©duit les temps de chargement de 40%. Mentorat de 2 d√©veloppeurs juniors.',
          },
        ],
        competencesAmeliorees: [
          'Frontend: React, Next.js, TypeScript, TailwindCSS',
          'Backend: Node.js, Express, PostgreSQL',
          'Outils: Git, Docker, CI/CD, Figma',
        ],
      },
    },
  });

  const cvPremium = await prisma.cV.create({
    data: {
      userId: userPro.id,
      template: 'premium',
      title: 'CV Data Scientist',
      status: 'completed',
      targetCompany: 'Meta',
      targetPosition: 'Data Scientist',
      downloadCount: 12,
      data: {
        nom: 'Martin',
        prenom: 'Thomas',
        email: 'thomas.martin@email.com',
        telephone: '+33 6 23 45 67 89',
        formation: 'Master Data Science',
        ecole: 'T√©l√©com Paris',
        anneeFormation: '2023',
        experiences: [
          {
            poste: 'Data Scientist',
            entreprise: 'BlaBlaCar',
            periode: 'Sept 2023 - Pr√©sent',
            description: 'Analyse de donn√©es comportementales de 5M+ utilisateurs. D√©veloppement de mod√®les ML pour optimiser les recommandations de trajets (+15% conversion).',
          },
        ],
        competences: 'Python, Pandas, Scikit-learn, TensorFlow, SQL, Tableau',
        objectif: 'Data Scientist passionn√© par l\'IA et le ML',
        entrepriseCiblee: 'Meta',
      },
    },
  });

  console.log(`‚úÖ CVs cr√©√©s: ${cvModern.id}, ${cvPremium.id}`);

  // ============================================
  // 3. CR√âER DES LETTRES DE MOTIVATION
  // ============================================
  console.log('‚úâÔ∏è Cr√©ation de lettres de motivation...');

  const letter1 = await prisma.letter.create({
    data: {
      userId: userFree.id,
      title: 'Lettre Google France',
      status: 'completed',
      targetCompany: 'Google France',
      targetPosition: 'D√©veloppeur Frontend',
      downloadCount: 3,
      generatedContent: `Madame, Monsieur,

Actuellement en Master Informatique √† l'Universit√© Paris-Saclay, je souhaite mettre mes comp√©tences en d√©veloppement frontend au service de Google France dans le cadre d'un poste de D√©veloppeur Frontend.

Passionn√©e par la cr√©ation d'exp√©riences web modernes, j'ai d√©velopp√© une solide expertise en React et TypeScript lors de mon exp√©rience chez StartupXYZ. J'ai notamment con√ßu une architecture scalable qui a permis de r√©duire les temps de chargement de 40%, am√©liorant significativement l'exp√©rience utilisateur pour plus de 50 000 utilisateurs quotidiens. Ma ma√Ætrise de Next.js et TailwindCSS me permet de cr√©er des interfaces performantes et accessibles.

Rejoindre Google France repr√©senterait pour moi une opportunit√© unique de travailler sur des projets √† impact mondial tout en contribuant √† l'innovation technologique. Je suis disponible d√®s maintenant et serais ravie d'√©changer avec vous sur ma candidature.

Je vous prie d'agr√©er, Madame, Monsieur, l'expression de mes salutations distingu√©es.`,
      data: {
        prenom: 'Marie',
        nom: 'Dupont',
        email: 'marie.dupont@email.com',
        telephone: '+33 6 12 34 56 78',
        adresse: '123 Rue de Paris, 75001 Paris',
        entreprise: 'Google France',
        destinataire: 'Service Recrutement',
        posteVise: 'D√©veloppeur Frontend',
        motivations: 'Passionn√©e par le d√©veloppement web moderne et l\'innovation',
        atouts: 'React, TypeScript, Next.js, exp√©rience en startup',
        disponibilite: 'Imm√©diatement',
      },
    },
  });

  console.log(`‚úÖ Lettre cr√©√©e: ${letter1.id}`);

  // ============================================
  // 4. CR√âER DES ENTR√âES D'HISTORIQUE
  // ============================================
  console.log('üìä Cr√©ation de l\'historique d\'usage...');

  await prisma.usageHistory.createMany({
    data: [
      {
        userId: userFree.id,
        action: 'cv_created',
        resourceType: 'cv',
        resourceId: cvModern.id,
        metadata: { template: 'modern' },
      },
      {
        userId: userFree.id,
        action: 'pdf_downloaded',
        resourceType: 'cv',
        resourceId: cvModern.id,
        metadata: { template: 'modern' },
      },
      {
        userId: userPro.id,
        action: 'cv_created',
        resourceType: 'cv',
        resourceId: cvPremium.id,
        metadata: { template: 'premium' },
      },
      {
        userId: userFree.id,
        action: 'letter_created',
        resourceType: 'letter',
        resourceId: letter1.id,
      },
    ],
  });

  console.log('‚úÖ Historique cr√©√©');

  // ============================================
  // 5. CR√âER DES STATS QUOTIDIENNES
  // ============================================
  console.log('üìà Cr√©ation des statistiques...');

  const today = new Date();
  today.setHours(0, 0, 0, 0);

  await prisma.dailyStats.upsert({
    where: { date: today },
    update: {},
    create: {
      date: today,
      newUsers: 12,
      activeUsers: 45,
      cvsCreated: 28,
      lettersCreated: 15,
      newSubscriptions: 3,
      canceledSubscriptions: 1,
      revenue: 3597, // 35,97‚Ç¨ en centimes
    },
  });

  console.log('‚úÖ Statistiques cr√©√©es');

  console.log('\n‚ú® Seed termin√© avec succ√®s!\n');
  console.log('üìù R√©sum√©:');
  console.log('  - 2 utilisateurs de test cr√©√©s');
  console.log('  - 2 CVs exemples cr√©√©s');
  console.log('  - 1 lettre de motivation cr√©√©e');
  console.log('  - Historique d\'usage g√©n√©r√©');
  console.log('  - Statistiques quotidiennes initialis√©es\n');
  console.log('üîê Comptes de test:');
  console.log(`  - FREE: free@test.com (clerkUserId: user_test_free_123)`);
  console.log(`  - PRO: pro@test.com (clerkUserId: user_test_pro_456)\n`);
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error('‚ùå Erreur lors du seed:', e);
    await prisma.$disconnect();
    process.exit(1);
  });



